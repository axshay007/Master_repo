{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/axshay007/Master_repo/blob/main/Master_repo\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "y_QUGfVmpY-A"
      },
      "outputs": [],
      "source": [
        "import numpy as np"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "l=[[1,2,3,4,5],\n",
        "   [6,7,8,9,10]]"
      ],
      "metadata": {
        "id": "HU6F5uCmrEAp"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "type(l)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TPdmZLJLrZYh",
        "outputId": "3750fab5-8413-4bd7-a4a6-39f264fac64f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "list"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x=np.array(l)"
      ],
      "metadata": {
        "id": "f6FzZi7CrdkM"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "type(x)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OawLNS3rrilY",
        "outputId": "51473adb-dbc4-4202-b27c-ffb332566e1a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "numpy.ndarray"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x=x.reshape(5,2)\n",
        "x.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cXCg02l3rzlI",
        "outputId": "2c6085ee-76f3-48d5-aa84-f7373b984fa3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(5, 2)"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qNdmrrNiuXNi",
        "outputId": "4ca9216b-a26a-4dc8-b062-5d02827cd181"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 1,  2],\n",
              "       [ 3,  4],\n",
              "       [ 5,  6],\n",
              "       [ 7,  8],\n",
              "       [ 9, 10]])"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x=np.array([1,2,3,4,5,2,4,6,7])"
      ],
      "metadata": {
        "id": "q1SKyL9AutKQ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "np.unique(x)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0U57FxdEvSzc",
        "outputId": "b7fce7c8-b4f7-4cd7-ae35-66f27001c25c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1, 2, 3, 4, 5, 6, 7])"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd"
      ],
      "metadata": {
        "id": "xhOIsW1Bx5Pv"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "l=[1,2,3,4]\n",
        "x=pd.Series(x)"
      ],
      "metadata": {
        "id": "Vtx_Rv1ix8FM"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "s={'kiet':['CSE','CS','ME'],'AKTU':['ME','EEE','CSIT']}"
      ],
      "metadata": {
        "id": "y8tOefJayIZb"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x=pd.DataFrame(s)"
      ],
      "metadata": {
        "id": "xW8jvfXty8HQ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ih6BLJDkzAcM",
        "outputId": "10fcef3e-9f00-4e4d-8571-2ad9a8090caa"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['kiet', 'AKTU'], dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x=pd.read_csv('/content/drive/MyDrive/Abhi rathi/Data/vehicle price/CAR DETAILS FROM CAR DEKHO.csv')"
      ],
      "metadata": {
        "id": "sUGkya9szhG7"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "N_tc8oUzz2we",
        "outputId": "e4fb98ce-d713-4d14-b1c4-fdc6706af0ab"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['name', 'year', 'selling_price', 'km_driven', 'fuel', 'seller_type',\n",
              "       'transmission', 'owner'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 58
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x.drop(['name'],axis=1,inplace=True)"
      ],
      "metadata": {
        "id": "KePnr5VF0KJx"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x.rename(columns={'year':'Abhi'})"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 467
        },
        "id": "kyi4xXJg6FFW",
        "outputId": "38a491dc-0552-41df-930b-6f1abe517bf2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Abhi  selling_price  km_driven    fuel seller_type transmission  \\\n",
              "0     2007          60000      70000  Petrol  Individual       Manual   \n",
              "1     2007         135000      50000  Petrol  Individual       Manual   \n",
              "2     2012         600000     100000  Diesel  Individual       Manual   \n",
              "3     2017         250000      46000  Petrol  Individual       Manual   \n",
              "4     2014         450000     141000  Diesel  Individual       Manual   \n",
              "...    ...            ...        ...     ...         ...          ...   \n",
              "4335  2014         409999      80000  Diesel  Individual       Manual   \n",
              "4336  2014         409999      80000  Diesel  Individual       Manual   \n",
              "4337  2009         110000      83000  Petrol  Individual       Manual   \n",
              "4338  2016         865000      90000  Diesel  Individual       Manual   \n",
              "4339  2016         225000      40000  Petrol  Individual       Manual   \n",
              "\n",
              "             owner  \n",
              "0      First Owner  \n",
              "1      First Owner  \n",
              "2      First Owner  \n",
              "3      First Owner  \n",
              "4     Second Owner  \n",
              "...            ...  \n",
              "4335  Second Owner  \n",
              "4336  Second Owner  \n",
              "4337  Second Owner  \n",
              "4338   First Owner  \n",
              "4339   First Owner  \n",
              "\n",
              "[4340 rows x 7 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-76436fb7-dafd-4955-b492-f1041d35029a\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Abhi</th>\n",
              "      <th>selling_price</th>\n",
              "      <th>km_driven</th>\n",
              "      <th>fuel</th>\n",
              "      <th>seller_type</th>\n",
              "      <th>transmission</th>\n",
              "      <th>owner</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2007</td>\n",
              "      <td>60000</td>\n",
              "      <td>70000</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>Individual</td>\n",
              "      <td>Manual</td>\n",
              "      <td>First Owner</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2007</td>\n",
              "      <td>135000</td>\n",
              "      <td>50000</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>Individual</td>\n",
              "      <td>Manual</td>\n",
              "      <td>First Owner</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2012</td>\n",
              "      <td>600000</td>\n",
              "      <td>100000</td>\n",
              "      <td>Diesel</td>\n",
              "      <td>Individual</td>\n",
              "      <td>Manual</td>\n",
              "      <td>First Owner</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2017</td>\n",
              "      <td>250000</td>\n",
              "      <td>46000</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>Individual</td>\n",
              "      <td>Manual</td>\n",
              "      <td>First Owner</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2014</td>\n",
              "      <td>450000</td>\n",
              "      <td>141000</td>\n",
              "      <td>Diesel</td>\n",
              "      <td>Individual</td>\n",
              "      <td>Manual</td>\n",
              "      <td>Second Owner</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4335</th>\n",
              "      <td>2014</td>\n",
              "      <td>409999</td>\n",
              "      <td>80000</td>\n",
              "      <td>Diesel</td>\n",
              "      <td>Individual</td>\n",
              "      <td>Manual</td>\n",
              "      <td>Second Owner</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4336</th>\n",
              "      <td>2014</td>\n",
              "      <td>409999</td>\n",
              "      <td>80000</td>\n",
              "      <td>Diesel</td>\n",
              "      <td>Individual</td>\n",
              "      <td>Manual</td>\n",
              "      <td>Second Owner</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4337</th>\n",
              "      <td>2009</td>\n",
              "      <td>110000</td>\n",
              "      <td>83000</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>Individual</td>\n",
              "      <td>Manual</td>\n",
              "      <td>Second Owner</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4338</th>\n",
              "      <td>2016</td>\n",
              "      <td>865000</td>\n",
              "      <td>90000</td>\n",
              "      <td>Diesel</td>\n",
              "      <td>Individual</td>\n",
              "      <td>Manual</td>\n",
              "      <td>First Owner</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4339</th>\n",
              "      <td>2016</td>\n",
              "      <td>225000</td>\n",
              "      <td>40000</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>Individual</td>\n",
              "      <td>Manual</td>\n",
              "      <td>First Owner</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>4340 rows × 7 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-76436fb7-dafd-4955-b492-f1041d35029a')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-76436fb7-dafd-4955-b492-f1041d35029a button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-76436fb7-dafd-4955-b492-f1041d35029a');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 67
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt"
      ],
      "metadata": {
        "id": "rQ1fGwqO18Mr"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "a=['kiet','ghaziabad','india','meerut']\n",
        "b=[10,15,5,12]\n",
        "c=[8,12,2,9]"
      ],
      "metadata": {
        "id": "SYgHduG52Y5G"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.bar(a,b,label='Rank')\n",
        "plt.bar(a,c,label='population')\n",
        "plt.title('City vs Ranking')\n",
        "plt.xlabel('city')\n",
        "plt.ylabel('Rank')\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "id": "3Je7WRer2qx2",
        "outputId": "9c69c583-d160-48a3-b866-e506e048f17e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(5,2))\n",
        "plt.plot(a,b,color='red',label='rank',linestyle='--')\n",
        "plt.plot(a,c,color='green',label='population',linestyle='--')\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 157
        },
        "id": "d4TJgiYk44FS",
        "outputId": "2ee11ca4-0620-4e26-cc0d-b45f1cd502ae"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 360x144 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.barh(a,b)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "5QUIa9vw9Bwm",
        "outputId": "f89de9bf-a2e6-4e2a-8b4d-13b53c7536ff"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAZcAAAD4CAYAAAAgs6s2AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAP0klEQVR4nO3dfZBddX3H8ffHgERAgy2IMairlmIpKOBiFWyLj4PypFXHClUonYnTKj5U6kSdUgZnnMzYWmrxYaIVnJLRVmpHKrUoqKNia9iEh4QncZpUkqLIOETABxS+/eOelMuym13Mb/fszb5fMzv33N85597P3ezNZ3/n7L03VYUkSS09qu8AkqTdj+UiSWrOcpEkNWe5SJKas1wkSc3t0XeAhWL//fevsbGxvmNI0khZv379nVV1wORxy6UzNjbGxMRE3zEkaaQk+Z+pxj0sJklqznKRJDVnuUiSmrNcJEnNWS6SpOYsF0lSc5aLJKk5y0WS1Jwvouxs3LadsVWX9R1D0jzbsvqEviPslpy5SJKas1wkSc1ZLpKk5iwXSVJzloskqTnLRZLUnOUiSWrOcpEkNWe5SJKas1wkSc1ZLpKk5iwXSVJzloskqTnLRZLUnOUiSWrOcpEkNWe5SJKa2+3LJckZSZ7Udw5JWkxGvlySzPRRzWcAloskzaM5L5ckY0luTnJRku8kWZvkJUmuSnJrkucm2SfJJ5OsS3JNklO6fZck+UCSq5Ncn+RN3fhxSb6R5FLgxu4+Ng3d59lJzk3yGmAcWJvk2iSPmevHK0mCmX7rb+U3gNcCZwJXA6cCLwBOBt4D3Ah8parOTLIfsC7JFcBpwPaqOjrJXsBVSb7U3eZRwGFVtTnJ2FR3WlWXJHkLcHZVTUxen2QlsBJgyeMOaPZgJWmxm69y2VxVGwGS3ABcWVWVZCMwBhwEnJzk7G77pcBTgJcBz+pmIADLgIOB+4B1VbV5V0JV1RpgDcBeyw+uXbktSdKD5qtcfj60/MDQ9Qe6DPcDr66qW4Z3ShLgrKq6fNL4ccC9Q0O/5KGH+Ja2iS1J+lUslBP6lwNndWVCkiOHxv80yZ7d+G8m2WeK/X8APCHJr3eHz04cWnc38Ni5iy5Jmmy+Zi4zeR9wPnB9kkcBmxkUxCcYHDbb0BXPD4FXTt65qn6R5DxgHbANuHlo9UXAx5L8FHh+Vf10Dh+HJAlIlacaYHDOZfnp5/cdQ9I827L6hL4jjLQk66tqfPL4QjksJknajVgukqTmLBdJUnOWiySpOctFktSc5SJJas5ykSQ1Z7lIkpqzXCRJzVkukqTmLBdJUnOWiySpOctFktSc5SJJas5ykSQ1t1A+LKx3h69YxoSf6yBJTThzkSQ1Z7lIkpqzXCRJzVkukqTmLBdJUnOWiySpOctFktSc5SJJas5ykSQ15yv0Oxu3bWds1WV9x9AMtvguCtJIcOYiSWrOcpEkNWe5SJKas1wkSc1ZLpKk5iwXSVJzloskqTnLRZLUnOUiSWrOcpEkNWe5SJKas1wkSc1ZLpKk5iwXSVJzloskqTnLRZLUnOUiSWpuQZVLkm89wu2PS/KFbvnkJKvmJpkk6ZFYUB9zXFXH7MK+lwKXNowjSfoVLbSZyz3d5XFJvpbkkiQ3J1mbJN2647uxDcAfDO17RpILuuWTknw7yTVJrkhyYC8PSJIWqQVVLpMcCbwdOBR4OnBskqXAx4GTgOcAT5xm328Cz6uqI4HPAO+aaqMkK5NMJJm4/yfbW+eXpEVrQR0Wm2RdVW0FSHItMAbcA2yuqlu78YuBlVPsexDwT0mWA48GNk91B1W1BlgDsNfyg6v1A5CkxWohz1x+PrR8P4+sCP8euKCqDgfeBCxtGUyStHMLuVymcjMwluQZ3fXXT7PdMmBbt3z6nKeSJD3ESJVLVf2MwWGwy7oT+ndMs+m5wGeTrAfunKd4kqROqjzVAINzLstPP7/vGJrBltUn9B1B0pAk66tqfPL4SM1cJEmjwXKRJDVnuUiSmrNcJEnNWS6SpOYsF0lSc5aLJKk5y0WS1JzlIklqznKRJDVnuUiSmrNcJEnNWS6SpOYsF0lSc5aLJKm5R/LRwbu1w1csY8LPCpGkJpy5SJKas1wkSc1ZLpKk5iwXSVJzloskqTnLRZLUnOUiSWrOcpEkNWe5SJKa8xX6nY3btjO26rK+Y0jSvNoyR+9M4sxFktSc5SJJas5ykSQ1Z7lIkpqzXCRJzVkukqTmLBdJUnOWiySpOctFktSc5SJJas5ykSQ1Z7lIkpqzXCRJzVkukqTmLBdJUnOWiySpOctFktTcr1wuSb6WZHxXAyT51gzrx5Js2oXb36X9JUmPXO8zl6o6pu8MkqS2ZlUuSf4yyS1Jvpnk00nO7la9Nsm6JN9J8rvdtmNJvpFkQ/d1TDd+XpJru69tSS7sxu/pLvdNcmW3z8YkpwxF2CPJ2iQ3Jbkkyd7dPuckuTrJpiRrkqQbf06S65JcB7y5yXdKkjRrM5ZLkqOBVwPPBl4ODB8K26Oqngu8HfirbuwO4KVVdRTwOuBDAFV1TlUdARwH/Ai4YNJd/Qx4VbffC4G/2VEWwCHAR6rqt4AfA3/WjV9QVUdX1WHAY4ATu/ELgbOq6tkzPLaVSSaSTNz/k+0zfSskSbM0m5nLscDnq+pnVXU38G9D6z7XXa4HxrrlPYGPJ9kIfBY4dMfGXVlcDHywqtZPup8A709yPXAFsAI4sFt3W1Vd1S1fDLygW35hkm939/Ui4LeT7AfsV1Vf77b5x+keWFWtqarxqhpfsveyGb8RkqTZ2WMX9/95d3n/0G29A/gBg5nOoxjMSHY4F9haVRdOcVunAQcAz6mqXyTZAizt1tWkbSvJUuAjwHhV3Zbk3KHtJUk9ms3M5SrgpCRLk+zLg4eeprMMuL2qHgDeACwBSHIS8BLgrTvZ746uWF4IPHVo3VOSPL9bPhX4Jg8WyZ1drtcAVNVdwF1JdsxuTpvFY5QkNTRjuVTV1cClwPXAF4GNwM5OUHwEOL07mf5M4N5u/M8ZHOpa153UP2/SfmuB8e4Q1xuBm4fW3QK8OclNwOOBj3Yl8nFgE3A5cPXQ9n8MfDjJtQwOt0mS5lGqJh9xmmKjZN+quqf7K62vAyurasOcp5tHey0/uJaffn7fMSRpXm1ZfcIu7Z9kfVU97DWPsz3nsibJoQwORX1qdysWSVJbsyqXqjp1roNIknYfvb9CX5K0+7FcJEnNWS6SpOYsF0lSc5aLJKk5y0WS1JzlIklqznKRJDVnuUiSmrNcJEnNWS6SpOYsF0lSc5aLJKm5Xf2Y493G4SuWMbGLn2sgSRpw5iJJas5ykSQ1Z7lIkpqzXCRJzVkukqTmLBdJUnOWiySpOctFktSc5SJJas5X6Hc2btvO2KrL+o4h7Ta2+I4Xi5ozF0lSc5aLJKk5y0WS1JzlIklqznKRJDVnuUiSmrNcJEnNWS6SpOYsF0lSc5aLJKk5y0WS1JzlIklqznKRJDVnuUiSmrNcJEnNWS6SpOYsF0lScyNRLknGkmyaNDae5EMz7HdEklfMbTpJ0mQj+zHHVTUBTMyw2RHAOPDvc59IkrTDSMxchiV5epJrkvxFki90Y/sk+WSSdd26U5I8GjgPeF2Sa5O8rt/kkrR4jNTMJckhwGeAM4DHA7/frXov8JWqOjPJfsA64ArgHGC8qt4yze2tBFYCLHncAXMbXpIWkVGauRwAfB44raqum7TuZcCqJNcCXwOWAk+Z6Qarak1VjVfV+JK9l7XOK0mL1ijNXLYD3wNeANw4aV2AV1fVLQ8ZTH5nnrJJkoaM0szlPuBVwBuTnDpp3eXAWUkCkOTIbvxu4LHzF1GSBKNVLlTVvcCJwDuAxw2teh+wJ3B9khu66wBfBQ71hL4kza+ROCxWVVuAw7rlu4Cju1WXdmM/Bd40xX4/GtpWkjRPRmrmIkkaDZaLJKk5y0WS1JzlIklqznKRJDVnuUiSmrNcJEnNWS6SpOYsF0lSc5aLJKk5y0WS1JzlIklqznKRJDVnuUiSmrNcJEnNjcTnucyHw1csY2L1CX3HkKTdgjMXSVJzloskqTnLRZLUnOUiSWrOcpEkNWe5SJKas1wkSc1ZLpKk5iwXSVJzqaq+MywISe4Gbuk7xyzsD9zZd4hZGpWso5ITzDoXRiUnLMysT62qAyYP+vYvD7qlqsb7DjGTJBOjkBNGJ+uo5ASzzoVRyQmjldXDYpKk5iwXSVJzlsuD1vQdYJZGJSeMTtZRyQlmnQujkhNGKKsn9CVJzTlzkSQ1Z7lIkppb9OWS5PgktyT5bpJVfeeZTpInJ/lqkhuT3JDkbX1n2pkkS5Jck+QLfWfZmST7Jbkkyc1Jbkry/L4zTSfJO7p/+01JPp1kad+ZAJJ8MskdSTYNjf1aki8nubW7fHyfGXeYJusHun//65P8a5L9+szYZXpYzqF170xSSfbvI9tsLepySbIE+DDwcuBQ4PVJDu031bR+Cbyzqg4Fnge8eQFnBXgbcFPfIWbh74D/qKpnAs9mgWZOsgJ4KzBeVYcBS4A/7DfV/7sIOH7S2Crgyqo6GLiyu74QXMTDs34ZOKyqngV8B3j3fIeawkU8PCdJngy8DPjefAd6pBZ1uQDPBb5bVf9dVfcBnwFO6TnTlKrq9qra0C3fzeA/wRX9pppakoOAE4BP9J1lZ5IsA34P+AeAqrqvqu7qN9VO7QE8JskewN7A//acB4Cq+jrwo0nDpwCf6pY/BbxyXkNNY6qsVfWlqvpld/W/gIPmPdgk03xPAf4WeBew4P8Sa7GXywrgtqHrW1mg/2EPSzIGHAl8u98k0zqfwRPggb6DzOBpwA+BC7tDeJ9Isk/foaZSVduAv2bwG+vtwPaq+lK/qXbqwKq6vVv+PnBgn2EegTOBL/YdYipJTgG2VdV1fWeZjcVeLiMnyb7AvwBvr6of951nsiQnAndU1fq+s8zCHsBRwEer6kjgXhbO4ZuH6M5ZnMKgEJ8E7JPkj/pNNTs1eL3Dgv9NO8l7GRx+Xtt3lsmS7A28Bzin7yyztdjLZRvw5KHrB3VjC1KSPRkUy9qq+lzfeaZxLHByki0MDjO+KMnF/Uaa1lZga1XtmAFewqBsFqKXAJur6odV9Qvgc8AxPWfamR8kWQ7QXd7Rc56dSnIGcCJwWi3MF/89g8EvFtd1z62DgA1Jnthrqp1Y7OVyNXBwkqcleTSDE6SX9pxpSknC4NzATVX1wb7zTKeq3l1VB1XVGIPv51eqakH+hl1V3wduS3JIN/Ri4MYeI+3M94DnJdm7+1l4MQv0jw86lwKnd8unA5/vMctOJTmewWHck6vqJ33nmUpVbayqJ1TVWPfc2goc1f0ML0iLuly6k3hvAS5n8ET956q6od9U0zoWeAODmcC13dcr+g61GzgLWJvkeuAI4P0955lSN7u6BNgAbGTw3F0QbwWS5NPAfwKHJNma5E+A1cBLk9zKYNa1us+MO0yT9QLgscCXu+fVx3oNybQ5R4pv/yJJam5Rz1wkSXPDcpEkNWe5SJKas1wkSc1ZLpKk5iwXSVJzloskqbn/A7I7k2jIKmbQAAAAAElFTkSuQmCC\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.pie(b,labels=a,autopct=\"%0.04f\",explode=[0.5,0,0.3,0])\n",
        "plt.savefig('pie.jpeg')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 256
        },
        "id": "9P2BsUnJ-323",
        "outputId": "3938c9c5-c05c-459b-c6fe-e1c3b56262c9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.hist(b)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "TDPSazdfDQ5l",
        "outputId": "8b72b822-2027-4cf3-a160-f52abeb0abad"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXQAAAD4CAYAAAD8Zh1EAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAP6klEQVR4nO3dfYxldX3H8ffHZcXHSMtOle6DYwMxVSIoE8SaNkRqugrZbSq2S6qClW5qJGJrYsAmGPlL00YbxUg2QlisRSw+dFWoEsWif7A64IIsK+1qUaBUBhYXCYqu/faPOdrpdWbvnZl75zq/fb+SmzkPvznnc3bhw+Xcc+5JVSFJWv2eNO4AkqThsNAlqREWuiQ1wkKXpEZY6JLUiKPGteN169bV5OTkuHYvSavSrbfe+lBVTcy3bmyFPjk5yfT09Lh2L0mrUpLvLbTOUy6S1AgLXZIaYaFLUiMsdElqhIUuSY2w0CWpEQMXepI1Sb6Z5HPzrDs6ybVJ9ifZnWRymCElSf0t5h36hcC+Bda9CXikqo4H3g+8d7nBJEmLM1ChJ9kAnAl8ZIEhW4Gd3fR1wBlJsvx4kqRBDXqn6D8A7wCeucD69cC9AFV1KMlB4FjgobmDkmwHtgNs2rRpKXkBmLzo80v+3eW65z1njm3fRxr/nqXF6fsOPclZwINVdetyd1ZVO6pqqqqmJibm/SoCSdISDXLK5eXAliT3AB8HXpHkH3vG3A9sBEhyFPAs4OEh5pQk9dG30Kvq4qraUFWTwDbgy1X1up5hu4Bzu+mzuzE+rFSSVtCSv20xyaXAdFXtAq4APppkP3CA2eKXJK2gRRV6VX0F+Eo3fcmc5T8BXjvMYJKkxfFOUUlqhIUuSY2w0CWpERa6JDXCQpekRljoktQIC12SGmGhS1IjLHRJaoSFLkmNsNAlqREWuiQ1wkKXpEZY6JLUCAtdkhphoUtSIwZ5SPRTknw9ye1J9iZ59zxjzksyk2RP9zp/NHElSQsZ5IlFTwCvqKrHkqwFvpbkhqq6pWfctVV1wfAjSpIG0bfQu4c9P9bNru1ePgBakn7NDHQOPcmaJHuAB4Ebq2r3PMNek+SOJNcl2TjUlJKkvgYq9Kr6eVWdDGwATk1yYs+QzwKTVfUi4EZg53zbSbI9yXSS6ZmZmeXkliT1WNRVLlX1Q+AmYHPP8oer6olu9iPAKQv8/o6qmqqqqYmJiaXklSQtYJCrXCaSHNNNPxV4JfDtnjHHzZndAuwbZkhJUn+DXOVyHLAzyRpm/wPwiar6XJJLgemq2gW8NckW4BBwADhvVIElSfMb5CqXO4AXz7P8kjnTFwMXDzeaJGkxvFNUkhphoUtSIyx0SWqEhS5JjbDQJakRFrokNcJCl6RGWOiS1AgLXZIaYaFLUiMsdElqhIUuSY2w0CWpERa6JDXCQpekRljoktQIC12SGjHIM0WfkuTrSW5PsjfJu+cZc3SSa5PsT7I7yeQowkqSFjbIO/QngFdU1UnAycDmJKf1jHkT8EhVHQ+8H3jvcGNKkvrpW+g167Fudm33qp5hW4Gd3fR1wBlJMrSUkqS++j4kGiDJGuBW4HjgQ1W1u2fIeuBegKo6lOQgcCzwUM92tgPbATZt2rS85FKDJi/6/Fj2e897zhzLfsdpXH/WMLo/74E+FK2qn1fVycAG4NQkJy5lZ1W1o6qmqmpqYmJiKZuQJC1gUVe5VNUPgZuAzT2r7gc2AiQ5CngW8PAwAkqSBjPIVS4TSY7ppp8KvBL4ds+wXcC53fTZwJerqvc8uyRphAY5h34csLM7j/4k4BNV9bkklwLTVbULuAL4aJL9wAFg28gSS5Lm1bfQq+oO4MXzLL9kzvRPgNcON5okaTG8U1SSGmGhS1IjLHRJaoSFLkmNsNAlqREWuiQ1wkKXpEZY6JLUCAtdkhphoUtSIyx0SWqEhS5JjbDQJakRFrokNcJCl6RGWOiS1AgLXZIaMcgzRTcmuSnJXUn2JrlwnjGnJzmYZE/3umS+bUmSRmeQZ4oeAt5eVbcleSZwa5Ibq+qunnFfraqzhh9RkjSIvu/Qq+qBqrqtm/4RsA9YP+pgkqTFWdQ59CSTzD4wevc8q1+W5PYkNyR54QK/vz3JdJLpmZmZRYeVJC1s4EJP8gzgk8DbqurRntW3Ac+tqpOADwKfmW8bVbWjqqaqampiYmKpmSVJ8xio0JOsZbbMP1ZVn+pdX1WPVtVj3fT1wNok64aaVJJ0WINc5RLgCmBfVb1vgTHP6caR5NRuuw8PM6gk6fAGucrl5cDrgW8l2dMteyewCaCqLgfOBt6c5BDwY2BbVdUI8kqSFtC30Kvqa0D6jLkMuGxYoSRJi+edopLUCAtdkhphoUtSIyx0SWqEhS5JjbDQJakRFrokNcJCl6RGWOiS1AgLXZIaYaFLUiMsdElqhIUuSY2w0CWpERa6JDXCQpekRljoktSIQZ4pujHJTUnuSrI3yYXzjEmSDyTZn+SOJC8ZTVxJ0kIGeaboIeDtVXVbkmcCtya5sarumjPmVcAJ3eulwIe7n5KkFdL3HXpVPVBVt3XTPwL2Aet7hm0Frq5ZtwDHJDlu6GklSQsa5B36LyWZBF4M7O5ZtR64d878fd2yB3p+fzuwHWDTpk2LS3qEm7zo82Pb9z3vOXNs+5Y0uIE/FE3yDOCTwNuq6tGl7KyqdlTVVFVNTUxMLGUTkqQFDFToSdYyW+Yfq6pPzTPkfmDjnPkN3TJJ0goZ5CqXAFcA+6rqfQsM2wW8obva5TTgYFU9sMBYSdIIDHIO/eXA64FvJdnTLXsnsAmgqi4HrgdeDewHHgfeOPyokqTD6VvoVfU1IH3GFPCWYYWSJC2ed4pKUiMsdElqhIUuSY2w0CWpERa6JDXCQpekRljoktQIC12SGmGhS1IjLHRJaoSFLkmNsNAlqREWuiQ1wkKXpEZY6JLUCAtdkhphoUtSIwZ5puiVSR5McucC609PcjDJnu51yfBjSpL6GeSZolcBlwFXH2bMV6vqrKEkkiQtSd936FV1M3BgBbJIkpZhWOfQX5bk9iQ3JHnhQoOSbE8ynWR6ZmZmSLuWJMFwCv024LlVdRLwQeAzCw2sqh1VNVVVUxMTE0PYtSTpF5Zd6FX1aFU91k1fD6xNsm7ZySRJi7LsQk/ynCTppk/ttvnwcrcrSVqcvle5JLkGOB1Yl+Q+4F3AWoCquhw4G3hzkkPAj4FtVVUjSyxJmlffQq+qc/qsv4zZyxolSWPknaKS1AgLXZIaYaFLUiMsdElqhIUuSY2w0CWpERa6JDXCQpekRljoktQIC12SGmGhS1IjLHRJaoSFLkmNsNAlqREWuiQ1wkKXpEZY6JLUiL6FnuTKJA8muXOB9UnygST7k9yR5CXDjylJ6meQd+hXAZsPs/5VwAndazvw4eXHkiQtVt9Cr6qbgQOHGbIVuLpm3QIck+S4YQWUJA1mGOfQ1wP3zpm/r1v2K5JsTzKdZHpmZmYIu5Yk/cKKfihaVTuqaqqqpiYmJlZy15LUvGEU+v3AxjnzG7plkqQVNIxC3wW8obva5TTgYFU9MITtSpIW4ah+A5JcA5wOrEtyH/AuYC1AVV0OXA+8GtgPPA68cVRhJUkL61voVXVOn/UFvGVoiSRJS+KdopLUCAtdkhphoUtSIyx0SWqEhS5JjbDQJakRFrokNcJCl6RGWOiS1AgLXZIaYaFLUiMsdElqhIUuSY2w0CWpERa6JDXCQpekRljoktSIgQo9yeYkdyfZn+Siedafl2QmyZ7udf7wo0qSDmeQZ4quAT4EvBK4D/hGkl1VdVfP0Gur6oIRZJQkDWCQd+inAvur6rtV9VPg48DW0caSJC3WIIW+Hrh3zvx93bJer0lyR5Lrkmycb0NJtieZTjI9MzOzhLiSpIUM60PRzwKTVfUi4EZg53yDqmpHVU1V1dTExMSQdi1JgsEK/X5g7jvuDd2yX6qqh6vqiW72I8Apw4knSRrUIIX+DeCEJM9L8mRgG7Br7oAkx82Z3QLsG15ESdIg+l7lUlWHklwAfAFYA1xZVXuTXApMV9Uu4K1JtgCHgAPAeSPMLEmaR99CB6iq64Hre5ZdMmf6YuDi4UaTJC2Gd4pKUiMsdElqhIUuSY2w0CWpERa6JDXCQpekRljoktQIC12SGmGhS1IjLHRJaoSFLkmNsNAlqREWuiQ1wkKXpEZY6JLUCAtdkhphoUtSIwYq9CSbk9ydZH+Si+ZZf3SSa7v1u5NMDjuoJOnw+hZ6kjXAh4BXAS8Azknygp5hbwIeqarjgfcD7x12UEnS4Q3yDv1UYH9Vfbeqfgp8HNjaM2YrsLObvg44I0mGF1OS1E+q6vADkrOBzVV1fjf/euClVXXBnDF3dmPu6+a/0415qGdb24Ht3ezzgbuXmHsd8FDfUW3xmI8MHvORYTnH/NyqmphvxVFLz7N4VbUD2LHc7SSZrqqpIURaNTzmI4PHfGQY1TEPcsrlfmDjnPkN3bJ5xyQ5CngW8PAwAkqSBjNIoX8DOCHJ85I8GdgG7OoZsws4t5s+G/hy9TuXI0kaqr6nXKrqUJILgC8Aa4Arq2pvkkuB6araBVwBfDTJfuAAs6U/Sss+bbMKecxHBo/5yDCSY+77oagkaXXwTlFJaoSFLkmNWFWFnuT5SfbMeT2a5G3jzjVqSf46yd4kdya5JslTxp1p1JJc2B3v3lb/jpNcmeTB7j6OXyz7zSQ3JvmP7udvjDPjsC1wzK/t/p7/J0lzly8ucMx/l+TbSe5I8ukkxwxjX6uq0Kvq7qo6uapOBk4BHgc+PeZYI5VkPfBWYKqqTmT2g+lRf+g8VklOBP6S2buUTwLOSnL8eFONxFXA5p5lFwFfqqoTgC918y25il895juBPwFuXvE0K+MqfvWYbwROrKoXAf8OXDyMHa2qQu9xBvCdqvreuIOsgKOAp3bX+D8N+K8x5xm13wV2V9XjVXUI+Ddm/4VvSlXdzOxVYXPN/RqNncAfr2ioEZvvmKtqX1Ut9a7xX3sLHPMXu3+2AW5h9v6eZVvNhb4NuGbcIUatqu4H/h74PvAAcLCqvjjeVCN3J/D7SY5N8jTg1fz/m9ta9uyqeqCb/m/g2eMMoxXxF8ANw9jQqiz07ganLcA/jzvLqHXnULcCzwN+G3h6kteNN9VoVdU+Zr+x84vAvwJ7gJ+PNdQYdDfneV1xw5L8LXAI+NgwtrcqC53Zr/K9rap+MO4gK+APgf+sqpmq+hnwKeD3xpxp5Krqiqo6par+AHiE2fOMR4IfJDkOoPv54JjzaESSnAecBfz5sO6sX62Ffg5HwOmWzveB05I8rftK4jOAfWPONHJJfqv7uYnZ8+f/NN5EK2bu12icC/zLGLNoRJJsBt4BbKmqx4e23dV2p2iSpzNbcr9TVQfHnWclJHk38GfM/q/ZN4Hzq+qJ8aYarSRfBY4Ffgb8TVV9acyRhi7JNcDpzH6V6g+AdwGfAT4BbAK+B/xpVfV+cLpqLXDMB4APAhPAD4E9VfVH48o4bAsc88XA0fzflxjeUlV/tex9rbZClyTNb7WecpEk9bDQJakRFrokNcJCl6RGWOiS1AgLXZIaYaFLUiP+F7gDVJVIx5z+AAAAAElFTkSuQmCC\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "df=pd.read_csv('/content/drive/MyDrive/Abhi rathi/Data/DSDL Bootcamp Day 1.csv')"
      ],
      "metadata": {
        "id": "wWfUKcp7D4rb"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "df.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hKbIHaDNE4x6",
        "outputId": "4e26a2a0-2a24-4ce3-feef-de01621f0356"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['Timestamp', 'Username', 'Name', 'Department', 'University Roll No',\n",
              "       'Are you member of DSDL Club', 'Year'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 67
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "mCirvfmKFDWP",
        "outputId": "fb431c95-b837-4c2f-9926-35aa0329fd81"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                         Timestamp                       Username  \\\n",
              "0   2022/04/25 7:07:08 PM GMT+5:30     anisha.2024ec1107@kiet.edu   \n",
              "1   2022/04/25 7:07:11 PM GMT+5:30      anmol.2024cs1085@kiet.edu   \n",
              "2   2022/04/25 7:07:14 PM GMT+5:30  priyanshi.2024cs1172@kiet.edu   \n",
              "3   2022/04/25 7:07:17 PM GMT+5:30     himanshi.2125csit@kiet.edu   \n",
              "4   2022/04/25 7:07:22 PM GMT+5:30   divyansh.2125cs1032@kiet.edu   \n",
              "..                             ...                            ...   \n",
              "69  2022/04/25 7:12:05 PM GMT+5:30       aman.2024cs1206@kiet.edu   \n",
              "70  2022/04/25 7:12:24 PM GMT+5:30     tarun.1923csi1123@kiet.edu   \n",
              "71  2022/04/25 7:16:03 PM GMT+5:30       ajay.2024cs1151@kiet.edu   \n",
              "72  2022/04/25 7:16:27 PM GMT+5:30    aksshat.2125cs1189@kiet.edu   \n",
              "73  2022/04/25 7:18:24 PM GMT+5:30      nihal.2125it1171@kiet.edu   \n",
              "\n",
              "               Name Department University Roll No Are you member of DSDL Club  \\\n",
              "0     Anisha kumari        ECE      2000290310033                         Yes   \n",
              "1      Anmol Patel          CS      2000290120027                         Yes   \n",
              "2         Priyanshi         CS      2000290120117                          No   \n",
              "3   Himanshi tyagi        CSIT      2100290110064                         Yes   \n",
              "4     Divyansh Goel        CSE      2100290100060                          No   \n",
              "..              ...        ...                ...                         ...   \n",
              "69   Aman Raj Singh         CS      2100290129003                          No   \n",
              "70      Tarun Yadav       CSIT      1900290110118                          No   \n",
              "71    Ajay Varshney         CS      2000290120016                         Yes   \n",
              "72   Aksshat Govind         CS      2100290120025                          No   \n",
              "73      Nihal Singh         IT      2100290130110                         Yes   \n",
              "\n",
              "        Year  \n",
              "0   2nd Year  \n",
              "1   2nd Year  \n",
              "2   2nd Year  \n",
              "3   1st Year  \n",
              "4   1st Year  \n",
              "..       ...  \n",
              "69  2nd Year  \n",
              "70  3rd Year  \n",
              "71  2nd Year  \n",
              "72  1st Year  \n",
              "73  1st Year  \n",
              "\n",
              "[74 rows x 7 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0e85bb44-8336-4a93-8342-d0a68287e83c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Timestamp</th>\n",
              "      <th>Username</th>\n",
              "      <th>Name</th>\n",
              "      <th>Department</th>\n",
              "      <th>University Roll No</th>\n",
              "      <th>Are you member of DSDL Club</th>\n",
              "      <th>Year</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022/04/25 7:07:08 PM GMT+5:30</td>\n",
              "      <td>anisha.2024ec1107@kiet.edu</td>\n",
              "      <td>Anisha kumari</td>\n",
              "      <td>ECE</td>\n",
              "      <td>2000290310033</td>\n",
              "      <td>Yes</td>\n",
              "      <td>2nd Year</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2022/04/25 7:07:11 PM GMT+5:30</td>\n",
              "      <td>anmol.2024cs1085@kiet.edu</td>\n",
              "      <td>Anmol Patel</td>\n",
              "      <td>CS</td>\n",
              "      <td>2000290120027</td>\n",
              "      <td>Yes</td>\n",
              "      <td>2nd Year</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2022/04/25 7:07:14 PM GMT+5:30</td>\n",
              "      <td>priyanshi.2024cs1172@kiet.edu</td>\n",
              "      <td>Priyanshi</td>\n",
              "      <td>CS</td>\n",
              "      <td>2000290120117</td>\n",
              "      <td>No</td>\n",
              "      <td>2nd Year</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2022/04/25 7:07:17 PM GMT+5:30</td>\n",
              "      <td>himanshi.2125csit@kiet.edu</td>\n",
              "      <td>Himanshi tyagi</td>\n",
              "      <td>CSIT</td>\n",
              "      <td>2100290110064</td>\n",
              "      <td>Yes</td>\n",
              "      <td>1st Year</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2022/04/25 7:07:22 PM GMT+5:30</td>\n",
              "      <td>divyansh.2125cs1032@kiet.edu</td>\n",
              "      <td>Divyansh Goel</td>\n",
              "      <td>CSE</td>\n",
              "      <td>2100290100060</td>\n",
              "      <td>No</td>\n",
              "      <td>1st Year</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69</th>\n",
              "      <td>2022/04/25 7:12:05 PM GMT+5:30</td>\n",
              "      <td>aman.2024cs1206@kiet.edu</td>\n",
              "      <td>Aman Raj Singh</td>\n",
              "      <td>CS</td>\n",
              "      <td>2100290129003</td>\n",
              "      <td>No</td>\n",
              "      <td>2nd Year</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>70</th>\n",
              "      <td>2022/04/25 7:12:24 PM GMT+5:30</td>\n",
              "      <td>tarun.1923csi1123@kiet.edu</td>\n",
              "      <td>Tarun Yadav</td>\n",
              "      <td>CSIT</td>\n",
              "      <td>1900290110118</td>\n",
              "      <td>No</td>\n",
              "      <td>3rd Year</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>71</th>\n",
              "      <td>2022/04/25 7:16:03 PM GMT+5:30</td>\n",
              "      <td>ajay.2024cs1151@kiet.edu</td>\n",
              "      <td>Ajay Varshney</td>\n",
              "      <td>CS</td>\n",
              "      <td>2000290120016</td>\n",
              "      <td>Yes</td>\n",
              "      <td>2nd Year</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>72</th>\n",
              "      <td>2022/04/25 7:16:27 PM GMT+5:30</td>\n",
              "      <td>aksshat.2125cs1189@kiet.edu</td>\n",
              "      <td>Aksshat Govind</td>\n",
              "      <td>CS</td>\n",
              "      <td>2100290120025</td>\n",
              "      <td>No</td>\n",
              "      <td>1st Year</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>73</th>\n",
              "      <td>2022/04/25 7:18:24 PM GMT+5:30</td>\n",
              "      <td>nihal.2125it1171@kiet.edu</td>\n",
              "      <td>Nihal Singh</td>\n",
              "      <td>IT</td>\n",
              "      <td>2100290130110</td>\n",
              "      <td>Yes</td>\n",
              "      <td>1st Year</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>74 rows × 7 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0e85bb44-8336-4a93-8342-d0a68287e83c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-0e85bb44-8336-4a93-8342-d0a68287e83c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-0e85bb44-8336-4a93-8342-d0a68287e83c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 71
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x=df.Department.value_counts()\n",
        "x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "h8uAci-iFiyn",
        "outputId": "63eace8b-af80-456e-a41d-6349ae7a44e4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "CSE      26\n",
              "CS       16\n",
              "CSIT     13\n",
              "IT        8\n",
              "ECE       6\n",
              "EE        3\n",
              "Other     1\n",
              "ME        1\n",
              "Name: Department, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 85
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "m=['CSE','CS','CSIT','IT',\"ECE\",'EE','other','ME']"
      ],
      "metadata": {
        "id": "o3Jl9LqiF6zB"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "l=[]\n",
        "for i in range(len(x)):\n",
        "  l.append(x[i])\n",
        "m=[]\n",
        "print(l,m)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "oyEkAKmdGBiK",
        "outputId": "7742b1ad-43dc-4eee-f8f2-4d8f46ac61e1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[26, 16, 13, 8, 6, 3, 1, 1] ['first', 'second', 'third']\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.pie(l,labels=m,autopct='%0.02f')\n",
        "#plt.locator_params('right-bottom')\n",
        "#plt.legend()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 248
        },
        "id": "llx-57YzGcop",
        "outputId": "d8be3ee0-2da8-470f-e2dd-3c4c27fb59e3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.datasets import make_regression"
      ],
      "metadata": {
        "id": "8WeZA3auog8L"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x,y=make_regression(n_samples=500,n_features=1,noise=200,random_state=10)"
      ],
      "metadata": {
        "id": "E89nfnf1GHDz"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split"
      ],
      "metadata": {
        "id": "CC9xq7aWohEq"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "xtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=30,random_state=10)"
      ],
      "metadata": {
        "id": "wEP3096kohK6"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(xtrain.shape,ytrain.shape,xtest.shape,ytest.shape)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "K50P3F7IMDPj",
        "outputId": "c3ae0322-7e77-46b1-a26e-c91257777d1e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(470, 1) (470,) (30, 1) (30,)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.linear_model import LinearRegression"
      ],
      "metadata": {
        "id": "Ug7ypD6oohN7"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model=LinearRegression()"
      ],
      "metadata": {
        "id": "3yTWXqekohQz"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model.fit(xtrain,ytrain)"
      ],
      "metadata": {
        "id": "tx2HbvRbohTy",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "23ea0fd6-6872-4b2b-b785-dadacce04bca"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LinearRegression()"
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import r2_score\n",
        "r2_score(ytest,model.predict(xtest))*100"
      ],
      "metadata": {
        "id": "p3oTquELohYj",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4f5ff738-4e4e-4929-87d6-ede865595e41"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "15.744155717994147"
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "m,b=np.plotfit(x,)"
      ],
      "metadata": {
        "id": "eWW-Go7uPurJ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import seaborn as sns\n",
        "sns.regplot(x,y)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 337
        },
        "id": "FQN4hH5kO1Tr",
        "outputId": "5e88a6cf-a8db-417f-dda9-324c7688b68b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
            "  FutureWarning\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f89154b8f10>"
            ]
          },
          "metadata": {},
          "execution_count": 32
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(model.intercept_,model.coef_)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cAV56rnBPaOB",
        "outputId": "1a7d6c61-f1ae-4f1e-eda6-7ef0dbea0c19"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-6.826848655226208 [67.4139234]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.datasets import make_regression"
      ],
      "metadata": {
        "id": "P-ZiBcWKohfD"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x,y=make_regression(n_samples=500,n_features=1 ,noise=20,random_state=3)\n",
        "plt.scatter(x[:,0],y)\n",
        "# plt.scatter(x[:,1],y)\n",
        "# plt.scatter(x[:,2],y)\n",
        "# plt.scatter(x[:,3],y)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "id": "K43nBT83o8VT",
        "outputId": "7047fc6d-8800-419a-ca8b-5d6510fa6b9c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.collections.PathCollection at 0x7f1b30cf3950>"
            ]
          },
          "metadata": {},
          "execution_count": 44
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "yVOxFZ58uPYD",
        "outputId": "ade6f5a2-1716-4a9b-d39f-850e3f943f16"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(500, 1)"
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x,y=make_regression(n_samples=500,n_features=5 ,noise=2000,random_state=0)\n",
        "plt.scatter(x[:,0],y)\n",
        "plt.scatter(x[:,1],y)\n",
        "plt.scatter(x[:,2],y)\n",
        "plt.scatter(x[:,3],y)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 285
        },
        "id": "h7WMQyC2qZDN",
        "outputId": "92c10ab4-7408-41a4-c483-da4868a166cb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.collections.PathCollection at 0x7f1b334206d0>"
            ]
          },
          "metadata": {},
          "execution_count": 21
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n"
      ],
      "metadata": {
        "id": "TNiJPn8-pkSi"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split\n"
      ],
      "metadata": {
        "id": "HRvnxIUDpraS"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "xtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=.02)"
      ],
      "metadata": {
        "id": "qQWvvueWrFV7"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.linear_model import LinearRegression\n",
        "model=LinearRegression()\n",
        "model.fit(xtrain,ytrain)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8cNaeSujrSub",
        "outputId": "01649a41-1d22-44de-b0e3-31fbfde20935"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LinearRegression()"
            ]
          },
          "metadata": {},
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(model.coef_,model.intercept_)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PctO2UhsruKt",
        "outputId": "357b1c28-37c7-4449-8892-cbf9a495f06a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[11.39352336] -0.16464044142576506\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import r2_score"
      ],
      "metadata": {
        "id": "lz5jfdOkrpvj"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "r2_score(model.predict(xtest),ytest)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-JHT7jeXsTLL",
        "outputId": "4aac66d4-d88f-4951-c8f4-acf848da04f6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "-5.599183302478742"
            ]
          },
          "metadata": {},
          "execution_count": 42
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import seaborn as sns\n",
        "import warnings\n",
        "warnings.filterwarnings(\"ignore\")\n",
        "sns.regplot(x,y,ci=None)"
      ],
      "metadata": {
        "id": "WcaUlL1EsbQK",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "outputId": "fca8a434-0354-4b1a-b3a3-37d0907d2ead"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f1b30186410>"
            ]
          },
          "metadata": {},
          "execution_count": 53
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "m,b=np.polyfit(x.reshape(500),y,1)"
      ],
      "metadata": {
        "id": "l2Bmu4RCtgzE"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.scatter(x,y,color='red')\n",
        "plt.plot(x,m*x+b)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "id": "loVP7z9ZuX5b",
        "outputId": "199fd234-6702-4351-accf-f5707cb2a964"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7f1b30add890>]"
            ]
          },
          "metadata": {},
          "execution_count": 50
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x,y=make_regression(n_samples=500,n_features=5 ,noise=200,random_state=0)\n",
        "plt.scatter(x[:,0],y)\n",
        "plt.scatter(x[:,1],y)\n",
        "plt.scatter(x[:,2],y)\n",
        "plt.scatter(x[:,3],y)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "id": "7Fj4l_EQutvS",
        "outputId": "4c563a88-4b5d-4e73-9a2e-14f1903ae2ad"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.collections.PathCollection at 0x7f1b300226d0>"
            ]
          },
          "metadata": {},
          "execution_count": 69
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model2=LinearRegression()\n",
        "xtrain,xtest,ytrain,ytest=train_test_split(x.reshape(-1,1),y,test_size=.2)\n"
      ],
      "metadata": {
        "id": "S1za60a9yaLK"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model2.fit(xtrain,ytrain)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lK7-SSEIykgp",
        "outputId": "31e3a8d4-30d2-4a1a-b08b-183d1dcf098f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LinearRegression()"
            ]
          },
          "metadata": {},
          "execution_count": 89
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "r2_score(ytrain,model2.predict(xtrain))*100"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sykzIpZ5yoOJ",
        "outputId": "02e1e05d-aa92-488e-a197-43348b5f869d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "93.36803367026705"
            ]
          },
          "metadata": {},
          "execution_count": 90
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "r2_score(ytest,model2.predict(xtest))*100"
      ],
      "metadata": {
        "id": "v-53piLd3EiZ",
        "outputId": "54dba624-5e33-4afe-c2e5-4609a6898221",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "94.07447025795317"
            ]
          },
          "metadata": {},
          "execution_count": 91
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x=np.array([i for i in range(0,51)])\n",
        "y=np.array([i*i for i in range(0,51)])"
      ],
      "metadata": {
        "id": "y3ciavHUz_eC"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x,y"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8Epxd1nm2lL5",
        "outputId": "c431ce03-441f-4077-ef47-5ab37bb66505"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,\n",
              "        17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,\n",
              "        34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49]),\n",
              " array([   0,    1,    4,    9,   16,   25,   36,   49,   64,   81,  100,\n",
              "         121,  144,  169,  196,  225,  256,  289,  324,  361,  400,  441,\n",
              "         484,  529,  576,  625,  676,  729,  784,  841,  900,  961, 1024,\n",
              "        1089, 1156, 1225, 1296, 1369, 1444, 1521, 1600, 1681, 1764, 1849,\n",
              "        1936, 2025, 2116, 2209, 2304, 2401]))"
            ]
          },
          "metadata": {},
          "execution_count": 83
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import PolynomialFeatures\n",
        "poly=PolynomialFeatures()"
      ],
      "metadata": {
        "id": "Fg23gq-a0KBp"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "xtrain2=poly.fit_transform(xtrain)\n",
        "xtest2=poly.transform(xtest)"
      ],
      "metadata": {
        "id": "pSvdPEbB0SWi"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model3=LinearRegression()\n",
        "model3.fit(xtrain2,ytrain)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aQ6nIQVN0aqj",
        "outputId": "da1f2ae5-38d6-40bf-db82-be4b7cade70e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LinearRegression()"
            ]
          },
          "metadata": {},
          "execution_count": 79
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "r2_score(ytest,model3.predict(xtest2))*100"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UFAoaza90xay",
        "outputId": "28940045-e933-42ef-8d67-3a57f1afae86"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "16.740171903586653"
            ]
          },
          "metadata": {},
          "execution_count": 80
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "df=pd.read_csv('/content/train.csv')"
      ],
      "metadata": {
        "id": "IDObtzy_Kunk"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mrG6BxHJK9sv",
        "outputId": "b1e2aa55-0689-4af4-8ad7-19c0802b62ab"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['battery_power', 'blue', 'clock_speed', 'dual_sim', 'fc', 'four_g',\n",
              "       'int_memory', 'm_dep', 'mobile_wt', 'n_cores', 'pc', 'px_height',\n",
              "       'px_width', 'ram', 'sc_h', 'sc_w', 'talk_time', 'three_g',\n",
              "       'touch_screen', 'wifi', 'price_range'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y=df.price_range"
      ],
      "metadata": {
        "id": "zbrRJfWiLKYK"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.drop(['price_range'],axis=1,inplace=True)"
      ],
      "metadata": {
        "id": "KwxgtIa4L5l7"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x=df.values"
      ],
      "metadata": {
        "id": "vd3vHseSMbqM"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "type(x)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZFV9Dk_wMveo",
        "outputId": "77b339cb-e5f6-42ae-e3ad-642d7067fe7c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "numpy.ndarray"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.linear_model import LinearRegression\n",
        "lg=LinearRegression()\n",
        "lg.fit(x,y)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "l7kLfQcjM9gX",
        "outputId": "875851a9-cc49-4f9b-db1f-4a24a1df7992"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LinearRegression()"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "lg.score(x,y)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SlU8qErnNIuo",
        "outputId": "ef72f2f5-f7e3-469f-f4b2-bef2949e5c72"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.9186309555753549"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.datasets import make_blobs\n",
        "from sklearn.metrics import accuracy_score"
      ],
      "metadata": {
        "id": "UzLAyGs-dP25"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "x,y=make_blobs(n_samples=2000,n_features=2,centers=2,random_state=10)"
      ],
      "metadata": {
        "id": "D9iOrO9Md0UP"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x.shape,y.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2tC8sMPueSVB",
        "outputId": "2d562be0-8670-4dfb-de1f-03ea8ce18263"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "((2000, 2), (2000,))"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "xtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=.2)"
      ],
      "metadata": {
        "id": "UA7gFc6YeWMs"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.linear_model import LogisticRegression\n",
        "model=LogisticRegression()"
      ],
      "metadata": {
        "id": "MVFnLr5nfFed"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model.fit(xtrain,ytrain)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Gu-rCTdqfNan",
        "outputId": "ee998e43-7456-4768-e5a2-a33339a301d5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LogisticRegression()"
            ]
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "accuracy_score(model.predict(xtest),ytest)*100"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "z_j1rUU5fo9P",
        "outputId": "f5161b50-4e9e-4608-8d26-8afb5934a0c7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "100.0"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#staring\n",
        "from sklearn.datasets import fetch_openml"
      ],
      "metadata": {
        "id": "gxiO09t7tvBK"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd"
      ],
      "metadata": {
        "id": "9LUlL8-hLgMB"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "mnist=fetch_openml('mnist_784')"
      ],
      "metadata": {
        "id": "anNwxUHLUHaL"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "mnist.key()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wiFIuAgwL6Px",
        "outputId": "176ff1a3-32c8-4049-f923-b52f58408f91"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "dict_keys(['data', 'target', 'frame', 'categories', 'feature_names', 'target_names', 'DESCR', 'details', 'url'])"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x=mnist.data.values\n",
        "y=mnist.target"
      ],
      "metadata": {
        "id": "F3e8XKlQUd7u"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tHeMaa8-MG8f",
        "outputId": "a9b8f255-4a93-401e-9c38-dc6a8a948367"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(70000, 785)"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "temp=x[100]\n",
        "temp.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uvkrofhjUkvT",
        "outputId": "a6d7ca8f-1737-4bbf-844a-042697f5f5b7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(784,)"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "plt.imshow(temp.reshape(28,28))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "id": "H4xA1I9SVVcx",
        "outputId": "ec41c0ea-eb9c-465c-d104-e851c4cffd94"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.image.AxesImage at 0x7fa44da6b150>"
            ]
          },
          "metadata": {},
          "execution_count": 15
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split"
      ],
      "metadata": {
        "id": "7TcGlZ97Vqrv"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "xtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=0.2,random_state=10)"
      ],
      "metadata": {
        "id": "HGR78mwyYLok"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.linear_model import LogisticRegression"
      ],
      "metadata": {
        "id": "5mS4v6ZjU61T"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "lg=LogisticRegression(multi_class='multinomial',solver='saga')"
      ],
      "metadata": {
        "id": "dEnk9VdKZEjh"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "lg.fit(xtrain,ytrain)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6QxKImWfZ5SJ",
        "outputId": "79b13b44-7b6d-4f4d-b8aa-a025c559adf0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_sag.py:354: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n",
            "  ConvergenceWarning,\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LogisticRegression(multi_class='multinomial', solver='saga')"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "lg.score(xtrain,ytrain)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BKh9I0-DbJ51",
        "outputId": "15f5ed29-a304-42a5-d649-30cc98ed8e41"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.9395357142857143"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "lg.score(xtest,ytest)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SAn-OtjvbRkA",
        "outputId": "73caaedc-791b-4bc7-9004-443043944196"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.9207857142857143"
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pickle\n",
        "with open('mnist.pkl','wb') as f1:\n",
        "  pickle.dump(lg,f1)\n",
        "  #ending"
      ],
      "metadata": {
        "id": "kM5qESqjMbSX"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.datasets import load_iris"
      ],
      "metadata": {
        "id": "N7pNSYVHfRUi"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "iris=load_iris()"
      ],
      "metadata": {
        "id": "fntie5y9fXOB"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x=iris.data\n",
        "y=iris.target"
      ],
      "metadata": {
        "id": "xvCc5pm3fbUG"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "iris.target_names"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "E_9DRBxJfzCp",
        "outputId": "74b24be6-ff07-4ba2-fb90-065473fbffe0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['setosa', 'versicolor', 'virginica'], dtype='<U10')"
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.neighbors import KNeighborsClassifier"
      ],
      "metadata": {
        "id": "8V0yWS1lfm3B"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "knn=KNeighborsClassifier(n_neighbors=5)"
      ],
      "metadata": {
        "id": "PUNIGXeGgyuQ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "y.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6MToumqUhbJP",
        "outputId": "ec3f40ad-1ffc-4eee-c446-5c63c75a1d3d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(150,)"
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "xtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=0.2)"
      ],
      "metadata": {
        "id": "DfT46IeJhJa6"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "knn.fit(xtrain,ytrain)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PWtLHpvVhkE6",
        "outputId": "24757347-6b05-4271-913f-6bb1e43b0bd9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "KNeighborsClassifier()"
            ]
          },
          "metadata": {},
          "execution_count": 41
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "knn.score(xtrain,ytrain)*100"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-DBqXoachryr",
        "outputId": "a671db4d-2c54-4e41-f692-45a713b3e4b9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "95.83333333333334"
            ]
          },
          "metadata": {},
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "knn.score(xtest,ytest)*100"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ahl0Q4iKhWn-",
        "outputId": "2c703799-6ab8-4f90-f36f-e8fbfa844a57"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "100.0"
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd"
      ],
      "metadata": {
        "id": "7jCA7FRomGcj"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df=pd.read_csv('/content/movie_reviews.csv')"
      ],
      "metadata": {
        "id": "zFhRrDBNmSpE"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GFDyE6iwoR5m",
        "outputId": "433fe47d-2f7c-4eb2-e969-533fa4a1ee54"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(50000, 2)"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "RsMyAXYnCOhc",
        "outputId": "f8a1c49e-41df-419d-b45d-c7bfd3fc75d6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                                  review  sentiment\n",
              "0      This is one of those unfortunate films that su...          1\n",
              "1      Okay maybe it was because I happen to be in Ya...          1\n",
              "2      Although I love this movie, I can barely watch...          1\n",
              "3      A man arrives in a strange, beautiful, sterile...          1\n",
              "4      I'm sitting around going through movie listing...          1\n",
              "...                                                  ...        ...\n",
              "49995  The memory of the \"The Last Hunt\" has stuck wi...          1\n",
              "49996  I mean really, how could Charles Band the head...          0\n",
              "49997  This is one of the best films ever made. It is...          1\n",
              "49998  Starting where the last AVP left off, an Alien...          0\n",
              "49999  Watch the Original with the same title from 19...          0\n",
              "\n",
              "[50000 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d18daca1-33d7-40af-ba1e-3be9f4ed3730\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>review</th>\n",
              "      <th>sentiment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>This is one of those unfortunate films that su...</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Okay maybe it was because I happen to be in Ya...</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Although I love this movie, I can barely watch...</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>A man arrives in a strange, beautiful, sterile...</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>I'm sitting around going through movie listing...</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49995</th>\n",
              "      <td>The memory of the \"The Last Hunt\" has stuck wi...</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49996</th>\n",
              "      <td>I mean really, how could Charles Band the head...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49997</th>\n",
              "      <td>This is one of the best films ever made. It is...</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49998</th>\n",
              "      <td>Starting where the last AVP left off, an Alien...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49999</th>\n",
              "      <td>Watch the Original with the same title from 19...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>50000 rows × 2 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d18daca1-33d7-40af-ba1e-3be9f4ed3730')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-d18daca1-33d7-40af-ba1e-3be9f4ed3730 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-d18daca1-33d7-40af-ba1e-3be9f4ed3730');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "def clean(x):\n",
        "  import re\n",
        "  x=re.sub(r'<,*?>','',x)\n",
        "  x=re.sub(r'[^a-zA-Z0-9]',' ',x)\n",
        "  x=re.sub(r'\\s+',' ',x)\n",
        "  return x.lower()"
      ],
      "metadata": {
        "id": "tSpi0bCfpaGK"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "clean(\"hey this is dsdl club         @!#$124\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "oEgw3rAQqg7M",
        "outputId": "700262cf-7f87-43a4-e7a1-f2102660d7fa"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'hey this is dsdl club 124'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 2
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import nltk\n",
        "from nltk.corpus import stopwords\n",
        "nltk.download('stopwords')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ma6eiq8Dsmls",
        "outputId": "25e81fa3-75b3-4a70-c956-12da598652af"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[nltk_data] Downloading package stopwords to /root/nltk_data...\n",
            "[nltk_data]   Unzipping corpora/stopwords.zip.\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "stopword=stopwords.words(\"english\")"
      ],
      "metadata": {
        "id": "PuCONLgPssKI"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#stopword"
      ],
      "metadata": {
        "id": "Ld3Y37xltAsD"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.feature_extraction.text import CountVectorizer"
      ],
      "metadata": {
        "id": "2EuEBteptgKj"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "cvt=CountVectorizer(stop_words=stopword)"
      ],
      "metadata": {
        "id": "FtPe2_GFlYWc"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#another method\n",
        "temp=df.iloc[:30000,:].review.apply(clean)"
      ],
      "metadata": {
        "id": "-LcHEvTLny-j"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "temp"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fdqvH4K_n9ny",
        "outputId": "6b5f4b86-c2bb-4cde-fe93-3600f67d6e06"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0       this is one of those unfortunate films that su...\n",
              "1       okay maybe it was because i happen to be in ya...\n",
              "2       although i love this movie i can barely watch ...\n",
              "3       a man arrives in a strange beautiful sterile c...\n",
              "4       i m sitting around going through movie listing...\n",
              "                              ...                        \n",
              "9995    terrible boring zombie sequel is only marginal...\n",
              "9996    it s a real big bummer that people easily are ...\n",
              "9997    this is a copy of the 1948 doris day classic r...\n",
              "9998    this film is not at all as bad as some people ...\n",
              "9999    this is without doubt one of the worst films i...\n",
              "Name: review, Length: 10000, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y=df.iloc[:30000,:].sentiment"
      ],
      "metadata": {
        "id": "VE9SosyAsNVp"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "xtrain,xtest,ytrain,ytest=train_test_split(temp,y,test_size=.3)"
      ],
      "metadata": {
        "id": "L1Qlxo9tqiuB"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.feature_extraction.text import TfidfVectorizer\n",
        "tfid=TfidfVectorizer(stop_words=stopword,min_df=10,max_df=.6)"
      ],
      "metadata": {
        "id": "JjMdcqcYoMfF"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "xtrain2=tfid.fit_transform(xtrain).toarray()\n",
        "xtest2=tfid.transform(xtest).toarray()"
      ],
      "metadata": {
        "id": "Uu_-oRAtolvn"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "xtrain2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5rsGZ3wfozrl",
        "outputId": "92406e0b-d0c4-49c6-e5d0-6bdef88f71bb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0., 0., 0., ..., 0., 0., 0.],\n",
              "       [0., 0., 0., ..., 0., 0., 0.],\n",
              "       [0., 0., 0., ..., 0., 0., 0.],\n",
              "       ...,\n",
              "       [0., 0., 0., ..., 0., 0., 0.],\n",
              "       [0., 0., 0., ..., 0., 0., 0.],\n",
              "       [0., 0., 0., ..., 0., 0., 0.]])"
            ]
          },
          "metadata": {},
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "xtrain_new=cvt.fit_transform(xtrain).toarray()"
      ],
      "metadata": {
        "id": "XOehYdrPmW2b"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "xtrain_new"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aGcKkRDDmfnO",
        "outputId": "c5b7db68-6251-4a94-e7ab-6913fb5ad1fb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0, 0, 0, ..., 0, 0, 0],\n",
              "       [0, 0, 0, ..., 0, 0, 0],\n",
              "       [0, 0, 0, ..., 0, 0, 0],\n",
              "       ...,\n",
              "       [0, 0, 0, ..., 0, 0, 0],\n",
              "       [0, 0, 0, ..., 0, 0, 0],\n",
              "       [0, 0, 0, ..., 0, 0, 0]])"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "xtest_new=cvt.transform(xtest).toarray()"
      ],
      "metadata": {
        "id": "7CJ6jxJLmkui"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#cvt.get_feature_names()"
      ],
      "metadata": {
        "id": "x_hZVHsCtAAQ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "nltk.download('words')\n",
        "from nltk.corpus import words\n",
        "correct_words=words.words()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nXBFOaWxxtDT",
        "outputId": "03511620-1084-494f-c1ff-fb15ad062873"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[nltk_data] Downloading package words to /root/nltk_data...\n",
            "[nltk_data]   Package words is already up-to-date!\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from nltk.metrics.distance import jaccard_distance\n",
        "from nltk.util import ngrams\n",
        "def correct(incorrect_words):\n",
        "  for word in incorrect_words:\n",
        "    temp = [(jaccard_distance(set(ngrams(word, 2)),set(ngrams(w, 2))),w)for w in correct_words if w[0]==word[0]]\n",
        "    print(sorted(temp, key = lambda val:val[0])[0][1])"
      ],
      "metadata": {
        "id": "p5Thr_Ko1lN8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "correct(['PM', 'azmaing', 'intelliengt'])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ErHPnK_x16y0",
        "outputId": "998f5d7d-c8d5-4ce4-b99f-e7ffe14a2934"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "P\n",
            "amazing\n",
            "intelligent\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install deep_sort"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3R4kB7p6z4vR",
        "outputId": "17e1d55b-4387-4656-dca9-4cd2bd24a4c8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[31mERROR: Could not find a version that satisfies the requirement deep_sort (from versions: none)\u001b[0m\n",
            "\u001b[31mERROR: No matching distribution found for deep_sort\u001b[0m\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.datasets import fetch_lfw_people"
      ],
      "metadata": {
        "id": "9pSgUdEPzei8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "dataset=fetch_lfw_people(min_faces_per_person=100)"
      ],
      "metadata": {
        "id": "HRZVPW5DzuNG"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x=dataset.data\n",
        "y=dataset.target\n",
        "dataset.images.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jRQKpPS2z1PE",
        "outputId": "a667d08d-35ef-48e6-afb0-7b99fe505ecf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1140, 62, 47)"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Vb1cQBQj0a3s",
        "outputId": "44f60a05-e5d7-4c6f-c02a-d268da69847b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1140, 2914)"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt"
      ],
      "metadata": {
        "id": "_dMRSYlnz9IP"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "temp=x[0]\n",
        "plt.imshow(temp.reshape(62,47))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 285
        },
        "id": "FTIbvMuJ0WHR",
        "outputId": "6aa17295-b514-4d0c-d50a-ee7f34f2e3cc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.image.AxesImage at 0x7f7e7dffc890>"
            ]
          },
          "metadata": {},
          "execution_count": 9
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.svm import SVC \n",
        "svc=SVC(kernel='rbf',gamma=0.005,class_weight='balanced')"
      ],
      "metadata": {
        "id": "1dkhtuOA02Ta"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x/=255"
      ],
      "metadata": {
        "id": "SNcf7iqf1-24"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "xtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=.2)"
      ],
      "metadata": {
        "id": "NpkFVI3y1ZAm"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "svc.fit(xtrain,ytrain)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mmrCKLBI1jv8",
        "outputId": "3206de8a-23ac-46e2-a474-09b6f8ee2f40"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "SVC(class_weight='balanced', gamma=0.005)"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "svc.score(xtest,ytest)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XgnUVzB81n1M",
        "outputId": "942d5c70-e56b-45a0-a803-46238ca14bab"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.8289473684210527"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.decomposition import PCA"
      ],
      "metadata": {
        "id": "e6vz6iUu9-Yi"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "pca=PCA(n_components=.97)"
      ],
      "metadata": {
        "id": "6ZA-p39B-DuA"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "xtrain2=pca.fit_transform(xtrain)"
      ],
      "metadata": {
        "id": "xnKpLcjL-R2F"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "xtrain2.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LMaI2hs4-XMK",
        "outputId": "b6d33d00-e9c4-40f7-b80c-4f0f66b71b6a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(912, 209)"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pickle\n",
        "with open('model.pkl','wb') as f1:\n",
        "  pickle.dump(svc,f1)"
      ],
      "metadata": {
        "id": "nXF_-BAS_GPq"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}